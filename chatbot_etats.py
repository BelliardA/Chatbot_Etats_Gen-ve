#!/usr/bin/env python
# pylint: disable=unused-argument
# This program is dedicated to the public domain under the CC0 license.

"""
First, a few callback functions are defined. Then, those functions are passed to
the Application and registered at their respective places.
Then, the bot is started and runs until we press Ctrl-C on the command line.

Usage:
Example of a bot-user conversation using ConversationHandler.
Send /start to initiate the conversation.
Press Ctrl-C on the command line or send a signal to the process to stop the
bot.
"""

import logging, sys
from transport import recherche_gps, recherche_texte,afficher_arret

from telegram import ReplyKeyboardMarkup, ReplyKeyboardRemove, Update
from telegram.ext import (
    Application,
    CommandHandler,
    ContextTypes,
    ConversationHandler,
    MessageHandler,
    filters,
)

token = sys.argv[1]
# Enable logging
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
# set higher logging level for httpx to avoid all GET and POST requests being logged
logging.getLogger("httpx").setLevel(logging.WARNING)

logger = logging.getLogger(__name__)


TRANSPORT ,MENUE ,SORTI_CHOIX ,RECOMMANDE_SORTI ,RESTAURANT_CHOIX ,RESTAU_RESULT ,RESTAU_DETAILS = range(7)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """Commencer la discusion en demandant si la personne veut manger ou sortir."""
    reply_keyboard = [["Sortir üö∂‚Äç‚ôÇÔ∏è", "Manger üçî"]]

    await update.message.reply_text(
        "Bonjour,je m'appelle guidoBot, je suis votre guide touristique ;)\n"
        "est-ce que vous voulez sortir ou manger quelques part\n\nPour avoir de l'aide entrez /help",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Sortir ou Manger?"
        ),
    )

    return MENUE

#------------------------------------------------------------------------Restaurant---------------------------------------------------------

async def restau_choix(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["Italien üáÆüáπ", "Asiatique üåè"],
        ["Suisse üá®üá≠", "Fran√ßais üá´üá∑", "Tha√Ølandais üáπüá≠"],
        ["Retour"]
    ]

    await update.message.reply_text(
        "Quelle type de nourriture voulez-vous manger ?\n\n",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Type de nourriture"
        ),
    )

    return RESTAURANT_CHOIX

#-------------------------------------------restaurants italien----------------------------------------
async def afficher_restau_Italien(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["La Tranche Gerardo Scalea"],
        ["Restaurant Intenso"],
        ["Braceria Gerardo Scalea"],
        ["Retour"]
    ]

    await update.message.reply_text(
        "Voici le top 3 des restaurants Italiens, faites votre choix !\n\nCliquer pour voir les d√©tails",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Top 3 restaurants italien"
        ),
    )

    return RESTAU_RESULT

async def la_tranche_gerardo_scalea(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["Retour"]
    ]

    await update.message.reply_text(
        " Une cuisine √† l'italienne concoct√©e par des italiens pure souche\n"
        "Le risotto dans la meule de parmesan et les p√¢tes fraiches maison sont les deux sp√©cialit√©s de l'Italia qui propose en outre des plats originaux de saison en plus de la carte fixe des mets.\n\n"
        "Tous les fruits et l√©gumes de l'Italia proviennent de producteurs locaux genevois. Le restaurant reste fid√®le √† ses mara√Æchers de Plan-les-Ouates depuis le d√©but.\n"
        "La Mozzarella di Bufala, les vins italiens et certains autres ingr√©dients typiques de la cuisine italiennesont s√©lectionn√©s directement par le patron.\n\n"
        "heure d'ouverture : \n du Lundi au Vendredi\t 11:30 - 14:30 / 18:00 - 23:00 \n Samedi et Dimanche\t 18:00 - 23:00",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Type de nourriture"
        ),
    )

    return RESTAU_DETAILS

async def intenso(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["Retour"]
    ]

    await update.message.reply_text(
        "Une √©quipe soud√©e, disponible pour les clients. Une cuisine qui excelle dans la recherche et la mati√®re premi√®re, dans la cr√©ativit√©, comme dans la technique de cuisson.\n"
        "Une ambiance intime et chaleureuse; un voyage unique dans les parfums et les saveurs authentiques de l‚ÄôItalie.\n"
        "Le Chef Ciro Guarino et son team italienne, vous proposera une s√©lection de plats de la tradition du Bel Paese, notamment de la C√¥te Amalfitaine.\n"
        "heure d'ouverture : \n du Mardi au Samedi\t 10:00 - 22:00",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Restaurant Intenso"
        ),
    )

    return RESTAU_DETAILS


async def braceria_gerardo_scalea(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["Retour"]
    ]

    await update.message.reply_text(
        "Le restaurant Italia accueille sa client√®le dans un d√©cor √©tonnant m√™lant l'ambiance italienne traditionnelle √† l'esprit m√©diterran√©en avec une verri√®re et des plantes suspendues.\n"
        "Le risotto dans la meule de parmesan et les p√¢tes fraiches maison sont les deux sp√©cialit√©s de l'Italia qui propose en outre des plats originaux de saison en plus de la carte fixe des mets.\n"
        "heure d'ouverture : \n du Lundi au Dimanche\t 11:45 - 14:00 / 18:45 - 23:00 ",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Braceria Gerardo Scalea"
        ),
    )

    return RESTAU_DETAILS


#---------------------------------------------restaurant fran√ßais-------------------------------------------

async def afficher_restau_Fran√ßais(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["Au Furet"],
        ["Domaine de Chateauvieux"],
        ["Les Curiades"],
        ["Retour"]
    ]

    await update.message.reply_text(
        "Voici le top 3 des restaurants Fran√ßais, faites votre choix !\n\nCliquer pour voir les d√©tails",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Top 3 restaurants italien"
        ),
    )

    return RESTAU_RESULT

async def au_furet(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["Retour"]
    ]

    await update.message.reply_text(
        " Michel Corajod et son √©quipe vous souhaite la bienvenue au Furet , le num√©ro 1 des gambas √† gogo !\n"
        "Tout les midis retrouvez notre entrec√¥te parisienne √† 17.-chf ainsi que le coquelet entier aux bolets √† 15.-chf !!\n\n"
        "Dans le quartier populaire des Charmilles, le restaurant le furet vous propose une cuisine vari√©e, un plat du jour soign√© √†  17 frs, et ses sp√©cialit√©s.\n"
        "heure d'ouverture : \n du Lundi au Vendredi\t 06:30 - 00h00\n Samedi et Dimanche\t09:00 - 00:00",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Au furet"
        ),
    )

    return RESTAU_DETAILS

async def domaine_chateauvieux(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["Retour"]
    ]

    await update.message.reply_text(
        " Dans ce lieu historique o√π une atmosph√®re conviviale r√®gne, vous serez choy√©s d√®s votre arriv√©e et aurez l‚Äôimpression de vous sentir comme chez vous. Toutes nos chambres ont √©t√© d√©cor√©es avec √©l√©gance et raffinement et ont toutes une vue magnifique donnant sur les vignes, le Rh√¥ne ou sur les montagnes du Jura. Nous sommes certains que vous serez sensibles au fait que l‚ÄôH√¥tel du Domaine de Ch√¢teauvieux abrite un restaurant gastronomique de r√©putation internationale, sous la direction de son chef √©toil√© Philippe Chevrier, √©galement propri√©taire du domaine.\n"
        "heure d'ouverture : \n du Mardi au Samedi\t 06:30 - 23:00",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Domaine de Chateauvieux"
        ),
    )

    return RESTAU_DETAILS

async def les_curiades(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["Retour"]
    ]

    await update.message.reply_text(
        " nous proposons 3 menus √† l'ann√©e inspir√©s par l'humeur et les trouvailles du Chef au march√© : un menu Terroir, un menu v√©g√©tarien Retour du potager et un Grand Menu Curiades accompagn√©s d'accords mets et vins. Selon les saisons nous pouvons aussi proposer des menus √† dur√©e limit√©e comme le menu Chasse √† l'automne ou encore chaque samedi midi un menu Retour du march√© en quantit√© limit√©e (la r√©servation est vivement recommand√©e!).\n"
        "heure d'ouverture : \n du Mardi au Samedi\t 12:15 - 15:00 / 19:00 - 00:00",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Les Curiades"
        ),
    )

    return RESTAU_DETAILS

#---------------------------------------------restaurant tha√Ølandais----------------------------------------
async def afficher_restau_Thailandais(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["Lanna Thai"],
        ["Ba√Ø-Toey"],
        ["Thai Phuket"],
        ["Retour"]
    ]

    await update.message.reply_text(
        "Voici le top 3 des restaurants Thailandais, faites votre choix !\n\nCliquer pour voir les d√©tails",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Top 3 restaurants italien"
        ),
    )

    return RESTAU_RESULT

async def lanna_thai(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["Retour"]
    ]

    await update.message.reply_text(
        "V√©ritable cuisine thailandaise √† d√©guster dans une ambiance familiale et chaleureuse. Sp√©cialit√©s Salade de Papaye, Phad Thai, Curry. Jolie terrasse ensoleill√©e.\n"
        "Tout nos plats sont disponibles √† l'emporter. Carte des vins et bi√®re Thai ( Singha ).\n\n"
        "Organisation de f√™tes et √©v√©nements particuliers sur r√©servation ( 60 places √† l'int√©rieur + 40 places en terrasse ).\n"
        "heure d'ouverture : \n du Lundi au Samedi\t 11:30 - 22:00",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Lanna Thai"
        ),
    )

    return RESTAU_DETAILS

async def bai_toey(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["Retour"]
    ]

    await update.message.reply_text(
        " Dans ce lieu historique o√π une atmosph√®re conviviale r√®gne, vous serez choy√©s d√®s votre arriv√©e et aurez l‚Äôimpression de vous sentir comme chez vous. Toutes nos chambres ont √©t√© d√©cor√©es avec √©l√©gance et raffinement et ont toutes une vue magnifique donnant sur les vignes, le Rh√¥ne ou sur les montagnes du Jura. Nous sommes certains que vous serez sensibles au fait que l‚ÄôH√¥tel du Domaine de Ch√¢teauvieux abrite un restaurant gastronomique de r√©putation internationale, sous la direction de son chef √©toil√© Philippe Chevrier, √©galement propri√©taire du domaine.\n"
        "heure d'ouverture : \n du Lundi au Vendredi\t 11:00 - 23:00\n Dimanche\t 17:00 - 22:30",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Ba√Ø-Toey"
        ),
    )

    return RESTAU_DETAILS

async def thai_phukets(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["Retour"]
    ]

    await update.message.reply_text(
        "Dans un cadre authentique vous retrouverez une qualit√© de service et une excellente cuisine tha√Ø. Ce restaurant gastronomique accueille des diplomates, des fonctionnaires internationaux et des hommes d'affaires pour le lunch ou pour le d√Æner\n"
        "heure d'ouverture : \n du Lundi au Samedi\t 12:00 - 14:30 / 19:00 - 22:30",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Thai Phuket"
        ),
    )

    return RESTAU_DETAILS

#--------------------------------------------Restaurant suisse----------------------------------------------
async def afficher_restau_Suisse(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["Planet Caviar"],
        ["Caf√© de Mategnin"],
        ["Trigal"],
        ["Retour"]
    ]

    await update.message.reply_text(
        "Voici le top 3 des restaurants Suisse, faites votre choix !\n\nCliquer pour voir les d√©tails",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Top 3 restaurants italien"
        ),
    )

    return RESTAU_RESULT

async def planet_caviar(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["Retour"]
    ]

    await update.message.reply_text(
        "Depuis 1997, Planet Caviar s‚Äôest impos√© comme une r√©f√©rence en mati√®re de caviars d‚Äôexcellence.\n"
        "Sp√©cialiste de ce mets savoureux et pr√©cieux, Planet Caviar accorde un soin attentif et particulier √† la qualit√© et la fra√Æcheur des caviars, s√©lectionn√©s avec soin, certifi√©s CITES et d‚Äôorigine contr√¥l√©e\n\n"
        "Planet Caviar importe et commercialise les meilleurs caviars des quatre coins du monde et apporte son savoir-faire gr√¢ce √† la collaboration de fournisseurs r√©put√©s (en France, Italie, Bulgarie, Uruguay, Isra√´l, Chine‚Ä¶)\n"
        "heure d'ouverture : \n du Lundi au Samedi\t 9:00 - 22:30",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Planet Caviar"
        ),
    )

    return RESTAU_DETAILS

async def cafe_de_mategnin(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["Retour"]
    ]

    await update.message.reply_text(
        "Venez d√©guster l'une des meilleures fondues de fromage de Gen√®ve dans notre caf√© typiquement genevois (depuis 1917).\n"
        "Vous pouvez √©galement profiter d'une ambiance plus feutr√©e dans notre salle de restaurant o√π vous sera servie une cuisine traditionnelle genevoise accompagn√©e de ses vins du terroir.\n"
        "Plusieurs assiettes du jour d√®s 17.‚Äì. Notre restaurant dispose d'une salle de 100 places, du caf√© de 60 places et d'une terrasse l'√©t√© de 80 places.\n\n"
        "heure d'ouverture : \n du Mardi au Samedi\t 10:30 - 14:30 / 18:30 - 23:30",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Caf√© de Mategnin"
        ),
    )

    return RESTAU_DETAILS

async def trigal(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["Retour"]
    ]

    await update.message.reply_text(
        "Il a √©t√© fond√© par Luis Coutinho, cuisinier de formation ayant toujours travaill√© dans le domaine de la restauration. \n"
        "A la t√™te de l'√©tablissement et d'une √©quipe de 8 employ√©s, il propose des plats vari√©s issus de la cuisine italienne, fran√ßaise et suisse qui raviront petits et grands !\n"
        "Gr√¢ce √† ses 96 places int√©rieures et ses 120 places ext√©rieures id√©alement r√©parties sur deux terrasses, le restaurant accueille volontiers les particuliers souhaitant f√™ter leurs anniversaire, mariage, bapt√™me ou encore communion.\n\n"
        "heure d'ouverture : \n du Lundi au Dimache\t 06:30 - 23:30",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Trigal"
        ),
    )

    return RESTAU_DETAILS
#--------------------------------------------Restaurant asiatique-------------------------------------------
async def afficher_restau_Asiatique(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["Misuji"],
        ["Pak√πpak√π"],
        ["Wasabi"],
        ["Retour"]
    ]

    await update.message.reply_text(
        "Voici le top 3 des restaurants Asiatiques, faites votre choix !\n\nCliquer pour voir les d√©tails",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Top 3 restaurants italien"
        ),
    )
    return RESTAU_RESULT

async def misuji(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["Retour"]
    ]

    await update.message.reply_text(
        "Depuis 1997, Planet Caviar s‚Äôest impos√© comme une r√©f√©rence en mati√®re de caviars d‚Äôexcellence.\n"
        "Sp√©cialiste de ce mets savoureux et pr√©cieux, Planet Caviar accorde un soin attentif et particulier √† la qualit√© et la fra√Æcheur des caviars, s√©lectionn√©s avec soin, certifi√©s CITES et d‚Äôorigine contr√¥l√©e\n\n"
        "Planet Caviar importe et commercialise les meilleurs caviars des quatre coins du monde et apporte son savoir-faire gr√¢ce √† la collaboration de fournisseurs r√©put√©s (en France, Italie, Bulgarie, Uruguay, Isra√´l, Chine‚Ä¶)\n"
        "heure d'ouverture : \n du Lundi au Samedi\t 9:00 - 22:30",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Misuji"
        ),
    )

    return RESTAU_DETAILS

async def pakupaku(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["Retour"]
    ]

    await update.message.reply_text(
        "Venez d√©guster l'une des meilleures fondues de fromage de Gen√®ve dans notre caf√© typiquement genevois (depuis 1917).\n"
        "Vous pouvez √©galement profiter d'une ambiance plus feutr√©e dans notre salle de restaurant o√π vous sera servie une cuisine traditionnelle genevoise accompagn√©e de ses vins du terroir.\n"
        "Plusieurs assiettes du jour d√®s 17.‚Äì. Notre restaurant dispose d'une salle de 100 places, du caf√© de 60 places et d'une terrasse l'√©t√© de 80 places.\n\n"
        "heure d'ouverture : \n du Mardi au Samedi\t 10:30 - 14:30 / 18:30 - 23:30",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Pak√πpak√π"
        ),
    )

    return RESTAU_DETAILS

async def wasabi(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["Retour"]
    ]

    await update.message.reply_text(
        "Il a √©t√© fond√© par Luis Coutinho, cuisinier de formation ayant toujours travaill√© dans le domaine de la restauration. \n"
        "A la t√™te de l'√©tablissement et d'une √©quipe de 8 employ√©s, il propose des plats vari√©s issus de la cuisine italienne, fran√ßaise et suisse qui raviront petits et grands !\n"
        "Gr√¢ce √† ses 96 places int√©rieures et ses 120 places ext√©rieures id√©alement r√©parties sur deux terrasses, le restaurant accueille volontiers les particuliers souhaitant f√™ter leurs anniversaire, mariage, bapt√™me ou encore communion.\n\n"
        "heure d'ouverture : \n du Lundi au Dimache\t 06:30 - 23:30",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Wasabi"
        ),
    )

    return RESTAU_DETAILS


#-------------------------------------------------------------------------------sorti--------------------------------------------------------------------


async def sortir(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["üé® Mus√©es üé®"],
        ["üçª Bars üçª"],
        ["üï∫ Clubs üï∫"],
        ["Retour"]
    ]

    await update.message.reply_text(
        "Sortir √ßa fait du bien ! quel type d'√©tablissement voulez-vous pour votre sortie ?\n\n",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Etablissement divertissement"
        ),
    )

    return SORTI_CHOIX

async def musees(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["Retour"]
    ]

    await update.message.reply_text(
        "Voici le top 3 des meilleurs mus√©e de Gen√®ve\n\n\t- Museum of Natural Historyü¶£\n\t- CERN‚ö°\n\t- Mus√©e d'art et d'histoireüßë‚Äçüé®",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Wasabi"
        ),
    )

    return RECOMMANDE_SORTI

async def bars(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["Retour"]
    ]

    await update.message.reply_text(
        "Voici le top 3 des meilleurs bars de Gen√®ve \n\n\t- Britannia Pubüéâ\n\t- Mr. Pickwick‚òï\n\t- O'Brasseurüç∫",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Wasabi"
        ),
    )

    return RECOMMANDE_SORTI

async def clubs(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """l'utilisateur veut manger donc on lui propose des styles de nourritures"""
    reply_keyboard = [
        ["Retour"]
    ]

    await update.message.reply_text(
        "Voici le top 3 des meilleurs clubs de Gen√®ve\n\n\t- Village du soirüåÜ\n\t- Baby Boaüêç\n\t- La Gravi√®reü™®",
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, input_field_placeholder="Wasabi"
        ),
    )

    return RECOMMANDE_SORTI

#---------------------------------------------------------transport-------------------------------------------------------------
async def transport(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """Cancels and ends the conversation."""
    await update.message.reply_text(
        "Il y a deux mani√®res de chercher un arret de tram\n 1.\t Envoie ta localisation et je t'envpoie les transport les plus proche\n2.\t Ecris le nom de l'arret", reply_markup=ReplyKeyboardRemove()
    )

    return TRANSPORT

async def help(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """Cancels and ends the conversation."""
    await update.message.reply_text(
        "Il y a plusieurs commande que vous pouvez faire n'importe quand : \n\n/help\tAide pour les commandes\n/menu Quitter le menu help\n/cancel\tFerme le Bot \n/transport\tOuvre le menu de transport\n   |-> /retour (dans le menu transport)\t Pour revenir en arri√®re", reply_markup=ReplyKeyboardRemove()
    )

    return MENUE

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """Cancels and ends the conversation."""
    user = update.message.from_user
    logger.info("User %s canceled the conversation.", user.first_name)
    await update.message.reply_text(
        "A plus tard, profite de Gen√®ve et si tu a besoin je suis la üëã", reply_markup=ReplyKeyboardRemove()
    )

    return ConversationHandler.END


def main() -> None:
    """Run the bot."""
    application = Application.builder().token(token).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            MENUE: [
                MessageHandler(filters.Regex("^(Sortir)"), sortir),
                MessageHandler(filters.Regex("^(Manger)"), restau_choix)
            ],
            RESTAURANT_CHOIX: [
                MessageHandler(filters.Regex("^(Italien)"), afficher_restau_Italien),
                MessageHandler(filters.Regex("^(Fran√ßais)"), afficher_restau_Fran√ßais),
                MessageHandler(filters.Regex("^(Asiatique)"), afficher_restau_Asiatique),
                MessageHandler(filters.Regex("^(Suisse)"), afficher_restau_Suisse),
                MessageHandler(filters.Regex("^(Tha√Ølandais)"), afficher_restau_Thailandais),
                MessageHandler(filters.Regex("(Retour)"), start)
            ],
            RESTAU_RESULT: [
                #-------restau italiens-------
                MessageHandler(filters.Regex("^(La Tranche Gerardo Scalea)$"), la_tranche_gerardo_scalea),
                MessageHandler(filters.Regex("^(Restaurant Intenso)$"), intenso),
                MessageHandler(filters.Regex("^(Braceria Gerardo Scalea)$"), braceria_gerardo_scalea),
                #------restau fran√ßais-------
                MessageHandler(filters.Regex("^(Au Furet)$"), au_furet),
                MessageHandler(filters.Regex("^(Domaine de Chateauvieux)$"), domaine_chateauvieux),
                MessageHandler(filters.Regex("^(Les Curiades)$"), les_curiades),
                #------restau thailandais----
                MessageHandler(filters.Regex("^(Lanna Thai)$"), lanna_thai),
                MessageHandler(filters.Regex("^(Ba√Ø-Toey)$"), bai_toey),
                MessageHandler(filters.Regex("^(Thai Phuket)$"), thai_phukets),
                #------restau suisse--------
                MessageHandler(filters.Regex("^(Planet Caviar)$"), planet_caviar),
                MessageHandler(filters.Regex("^(Caf√© de Mategnin)$"), cafe_de_mategnin),
                MessageHandler(filters.Regex("^(Trigal)$"), trigal),
                #-----restau asiatique------
                MessageHandler(filters.Regex("^(Misuji)$"), misuji),
                MessageHandler(filters.Regex("^(Pak√πpak√π)$"), pakupaku),
                MessageHandler(filters.Regex("^(Wasabi)$"), wasabi),

                MessageHandler(filters.Regex("(Retour)"), restau_choix)
            ],
            RESTAU_DETAILS: [
                MessageHandler(filters.Regex("(Retour)"), restau_choix)
            ],
            SORTI_CHOIX: [
                MessageHandler(filters.Regex("(Mus√©es)"), musees),
                MessageHandler(filters.Regex("(Bars)"), bars),
                MessageHandler(filters.Regex("(Clubs)"), clubs),
                MessageHandler(filters.Regex("(Retour)"), start)
            ],
            RECOMMANDE_SORTI: [
                MessageHandler(filters.Regex("(Retour)"), sortir)
            ],
            TRANSPORT:[
                CommandHandler("cancel", cancel),
                CommandHandler("retour", start),
                MessageHandler(filters.COMMAND, afficher_arret),
                MessageHandler(filters.LOCATION, recherche_gps),
                MessageHandler(filters.TEXT, recherche_texte)
            ]
        },
        fallbacks=[
            CommandHandler("menu", start),
            CommandHandler("cancel", cancel),
            CommandHandler("transport", transport),
            CommandHandler('help', help)
        ],
    )

    application.add_handler(conv_handler)

    # Run the bot until the user presses Ctrl-C
    application.run_polling(allowed_updates=Update.ALL_TYPES)


if __name__ == "__main__":
    main()